{"version":3,"sources":["assets/images/logo.png","components/StatisticLabel/MoneyStatisticLabels.tsx","components/Product/Product.tsx","model/products.ts","components/Table/Table.tsx","screens/Dashboard/Dashboard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","MoneyStatisticLabel","label","amount","className","Col","sm","toLocaleString","Product","addSale","salesQuantity","moneyGenerated","onSelect","product","image","defaultSaleOptions","enableShipping","commission","inputShipping","React","useState","saleOptions","setSaleOptions","useShipping","setUseShipping","useComission","setUseCommission","shippingPrice","setShippingPrice","isLoading","setIsLoading","toggleSaleOptions","ev","id","target","resetSaleOptions","newSale","a","profit","price","cost","sale","Date","getTime","productId","productName","name","shipping","onClick","style","backgroundImage","Button","type","CustomInput","onChange","e","checked","Input","placeholder","value","Number","Spinner","animation","variant","products","process","TableComponent","headers","data","actions","Table","responsive","map","item","u","key","i","head","property","action","method","months","Dashboard","activeAddSaleModal","setActiveAddSaleModal","activeConfirmationModal","setActiveConfirmationModal","loadingApp","setLoadingApp","confirmationFunction","setConfirmationFunction","useCommission","addingSale","setAddingSale","productSalesActive","setProductSalesActive","productSales","setProductSales","setProduct","salesData","setSalesData","salesTotals","setSalesTotals","tithe","setTithe","promotion","setPromotion","registeredDates","setRegisteredDates","filter","setFilter","getMonth","getFullYear","recordedDate","setRecordedDate","selectProduct","getSalesData","date","fetch","response","json","useEffect","getAllRecordsDates","onChangeProduct","intValue","newProduct","sales","body","JSON","stringify","status","toast","dates","find","push","updateSales","newTotals","Object","keys","forEach","total","getTotalSumFromSalesDataKey","setAllDashboardTotals","reduce","b","getProductMoney","toggleAddSale","salesAction","toggleConfirmation","deleteSale","console","log","saleId","sort","aProfit","undefined","bProfit","aSales","length","bSales","mostSalesProducts","onChangeDateRegistered","Modal","isOpen","toggle","ModalHeader","ModalBody","ModalFooter","color","FormGroup","Label","for","newProductSales","disabled","lg","md","src","Logo","alt","defaultValue","split","selected","Row","App","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","pauseOnHover","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fcf0e97a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7d433192.png\";","import React from 'react';\nimport {Col, ColProps} from \"reactstrap\";\nimport \"./MoneyStatisticLabels.scss\";\n\nexport interface IMoneyStatisticLabel {\n    label: string;\n    amount: number;\n    className?: string;\n}\n\nconst MoneyStatisticLabel: React.FunctionComponent<IMoneyStatisticLabel> = (\n    {\n        label,\n        amount,\n        className,\n    }\n) => {\n\n    return (\n        <div className={className}>\n            <Col\n                sm={12}\n                className=\"d-flex justify-content-center\"\n            >\n                <h4 className=\"amount\">RD$ {amount ? amount.toLocaleString('en-US') : 0}</h4>\n            </Col>\n            <Col\n                sm={12}\n                className=\"d-flex justify-content-center\"\n            >\n                <p>{label}</p>\n            </Col>\n        </div>\n    );\n};\n\nexport default MoneyStatisticLabel\n","import React, {ChangeEvent} from 'react';\nimport \"./Product.scss\";\nimport {IProductData} from \"../../model/products\";\nimport {Button, CustomInput, Input, Spinner} from \"reactstrap\";\nimport {ISale } from \"../../screens/Dashboard/Dashboard\";\n\nexport interface IProduct extends IProductData {\n    addSale: (data: ISale) => any;\n    salesQuantity?: number;\n    moneyGenerated?: number;\n    onSelect: (product: IProductData) => any;\n}\n\nexport interface ISaleOptions {\n    enableShipping: boolean;\n    commission: boolean;\n    inputShipping: boolean;\n}\n\nconst Product: React.FunctionComponent<IProduct> = ({addSale, salesQuantity, moneyGenerated, onSelect, ...product}) => {\n\n    const {image} = product;\n    const defaultSaleOptions: ISaleOptions = {enableShipping: false, commission: false, inputShipping: false};\n    const [saleOptions, setSaleOptions] = React.useState<ISaleOptions>(\n        defaultSaleOptions\n    );\n\n    const [useShipping, setUseShipping] = React.useState(false);\n    const [useComission, setUseCommission] = React.useState(false);\n    const [shippingPrice, setShippingPrice] = React.useState();\n    const [isLoading, setIsLoading] = React.useState(false);\n\n    const toggleSaleOptions = (ev: any) => {\n        const {id} = ev.target;\n        setSaleOptions({\n            ...defaultSaleOptions,\n            [id]: true,\n        })\n    };\n\n    const shippingOnChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const {checked} = e.target;\n        setUseShipping(checked);\n    };\n\n    const commissionOnChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const {checked} = e.target;\n        setUseCommission(checked);\n    };\n\n    const shippingPriceOnChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const {value} = e.target;\n\n        setShippingPrice(value ? Number(value) : value);\n    };\n\n    const resetSaleOptions = () => {\n        setUseCommission(false);\n        setUseShipping(false);\n        setSaleOptions(defaultSaleOptions);\n    };\n\n    const newSale = async () => {\n        const profit = product.price - product.cost;\n        const sale: ISale = {\n            id: new Date().getTime(),\n            productId: product.id,\n            price: product.price,\n            cost: product.cost,\n            profit: profit,\n            productName: product.name,\n        };\n\n        if (useShipping) {\n            sale.shipping = shippingPrice;\n        }\n        if (useComission) {\n            sale.commission = product.commission;\n        }\n\n        resetSaleOptions();\n        setIsLoading(true);\n\n        await addSale(sale);\n\n        setIsLoading(false);\n    };\n\n    const onSelectProduct = () => {\n        onSelect(product);\n    };\n\n    return (\n        <div className=\"card\" onClick={onSelectProduct}>\n            <div\n                className=\"card-content\"\n            >\n                <div className=\"card-image-container overflow-hidden\">\n                    <div\n                        className=\"card-image\"\n                        style={{\n                            backgroundImage:\n                                `url('${image}')`\n                        }}\n                    >\n                    </div>\n                    <div className=\"add-sale-container\">\n                        <b className=\"reset-sale\" onClick={resetSaleOptions}>X</b>\n                        {\n                            saleOptions.commission || saleOptions.enableShipping || saleOptions.inputShipping ? null :\n                                <Button type=\"button\" id=\"enableShipping\" onClick={toggleSaleOptions}>\n                                    Añadir Venta\n                                </Button>\n                        }\n                        {\n                            !saleOptions.enableShipping ? null :\n                                <>\n                                    <CustomInput\n                                        type=\"switch\"\n                                        label=\"¿Incluye envio?\"\n                                        className=\"customized-switch\"\n                                        onChange={shippingOnChange}/>\n                                    <Button className=\"mt-3\" id={useShipping ? \"inputShipping\" : \"commission\"}\n                                            onClick={toggleSaleOptions}>Continuar</Button>\n                                </>\n                        }\n                        {\n                            !saleOptions.inputShipping ? null :\n                                <>\n                                    <Input placeholder=\"Precio de Envio\" name=\"shipping\" type=\"number\"\n                                           className=\"shipping-input\" value={shippingPrice}\n                                           onChange={shippingPriceOnChange}/>\n                                    <Button className=\"mt-3\" id=\"commission\"\n                                            onClick={toggleSaleOptions}>Continuar</Button>\n                                </>\n                        }\n\n                        {\n                            !saleOptions.commission ? null :\n                                <>\n                                    <CustomInput\n                                        type=\"switch\"\n                                        label=\"¿Incluye comisión?\"\n                                        className=\"customized-switch\"\n                                        onChange={commissionOnChange}/>\n                                    <Button className=\"mt-3\" onClick={newSale}>Fin</Button>\n                                </>\n                        }\n\n                        {\n                            !isLoading ? null :\n                                    <Spinner animation=\"grow\" variant=\"secondary\"/>\n                        }\n                    </div>\n                </div>\n\n                <div className=\"card-title\">\n                    <div className=\"title\">\n                        <h4>Ventas: {salesQuantity}</h4>\n                        <h4>Ingresos: RD$ {moneyGenerated && moneyGenerated.toLocaleString('en-US')}</h4>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default Product;\n","export interface IProductData {\n  id: number;\n  name: string;\n  price: number;\n  cost: number;\n  commission: number;\n  image: string;\n  shipping?: number;\n}\n\nconst products: IProductData[] = [\n  {\n    id: 1,\n    name: 'Airpods Serie 2',\n    price: 2500,\n    cost: 950,\n    image: '/assets/images/products/airpods serie 2.png',\n    commission: 100,\n  },\n  {\n    id: 2,\n    name: 'Airpods Pro',\n    price: 3000,\n    cost: 1500,\n    image: `${process.env.PUBLIC_URL}assets/images/products/airpodsPro.png`,\n    commission: 200,\n  },\n  {\n    id: 3,\n    name: 'AppleWatch Serie 6',\n    price: 3400,\n    cost: 1680,\n    image: '/assets/images/products/W26.png',\n    commission: 200,\n  },\n  {\n    id: 4,\n    name: 'AKG',\n    price: 150,\n    cost: 40,\n    image: '/assets/images/products/AKG.png',\n    commission: 100,\n  },\n  {\n    id: 5,\n    name: 'LY002',\n    price: 600,\n    cost: 290,\n    image: '/assets/images/products/LY002.png',\n    commission: 100,\n  },\n  {\n    id: 6,\n    name: 'BX340BT',\n    price: 750,\n    cost: 470,\n    image: '/assets/images/products/BX340BT.png',\n    commission: 100,\n  },\n  {\n    id: 7,\n    name: 'K856',\n    price: 1150,\n    cost: 650,\n    image: '/assets/images/products/K856.png',\n    commission: 100,\n  },\n  {\n    id: 8,\n    name: 'QD21',\n    price: 600,\n    cost: 290,\n    image: '/assets/images/products/QD21.png',\n    commission: 100,\n  },\n  {\n    id: 9,\n    name: 'TG113',\n    price: 500,\n    cost: 260,\n    image: '/assets/images/products/TG113.png',\n    commission: 100,\n  },\n  {\n    id: 10,\n    name: 'TG117',\n    price: 750,\n    cost: 470,\n    image: '/assets/images/products/TG117.png',\n    commission: 100,\n  },\n  {\n    id: 11,\n    name: 'TG149',\n    price: 750,\n    cost: 470,\n    image: '/assets/images/products/TG149.png',\n    commission: 100,\n  },\n  {\n    id: 12,\n    name: 'AppleWatch Serie 5',\n    price: 3400,\n    cost: 1100,\n    image: '/assets/images/products/T500.png',\n    commission: 200,\n  },\n  {\n    id: 13,\n    name: 'T5 Plus',\n    price: 3400,\n    cost: 1380,\n    image: '/assets/images/products/T500.png',\n    commission: 200,\n  },\n];\n\nexport default products\n","import React from 'react';\nimport { Button, Pagination, PaginationItem, PaginationLink, Table } from \"reactstrap\";\n\nexport interface IHeader {label: string; property: string}\n\nexport interface IAction {\n    method: (item: any) => () => any;\n    label: string;\n    className?: string;\n}\n\nexport interface ITable {\n    headers: IHeader[];\n    data: any[];\n    actions?: IAction[];\n}\n\nconst TableComponent: React.FunctionComponent<any> = ({ headers, data, actions = [] }) => {\n\n    return(\n    <div>\n        <Table responsive>\n            <thead>\n            <tr>\n                <th>#</th>\n                {\n                    headers.map((item: any, u: number) =>\n                    <th key={u}>{item.label}</th>\n                    )\n                }\n            </tr>\n            </thead>\n            <tbody>\n            { data.map( (item: any, i: number) =>\n                <tr key={i}>\n                    <>\n                        <th>{ i + 1}</th>\n                        {\n                            headers.map((head: IHeader, i: number) => <td key={i}>{item[head.property]}</td>)\n                        }\n                        {\n                            actions.map(\n                                (action: IAction, i: number) =>\n                                    <td key={i}>\n                                        <Button type=\"button\" onClick={action.method(item as any)}>\n                                            {action.label}\n                                        </Button>\n                                    </td>\n                            )\n                        }\n                    </>\n                </tr>\n            )\n            }\n            </tbody>\n        </Table>\n    </div>)\n}\n\nexport default TableComponent;\n","import React from 'react';\nimport {\n    Col,\n    Row,\n    FormGroup,\n    Label,\n    Input,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Button,\n    Spinner, CustomInput\n} from 'reactstrap';\nimport { MoneyStatisticLabel, Product } from '../../components';\nimport Logo from \"../../assets/images/logo.png\"\nimport \"./Dashboard.scss\";\nimport products, { IProductData } from \"../../model/products\";\nimport { toast } from \"react-toastify\";\nimport TableComponent, { IAction, IHeader } from \"../../components/Table/Table\";\n\nexport interface ISale {\n    id: number;\n    productId: number;\n    price: number;\n    profit: number;\n    commission?: number;\n    shipping?: number;\n    productName: string;\n    cost: number;\n};\n\nexport interface ISalesData {\n    sales: ISale[];\n}\n\nexport type ITotals = {\n    [N in Exclude<keyof ISale, 'productName'>]: number;\n}\n\nexport type IProductFilters = \"MostProfit\" | \"MostSales\";\nconst months = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"];\n\nconst Dashboard: React.FunctionComponent<any> = () => {\n    const [activeAddSaleModal, setActiveAddSaleModal] = React.useState(false);\n    const [activeConfirmationModal, setActiveConfirmationModal] = React.useState(false);\n    const [loadingApp, setLoadingApp] = React.useState(false);\n    const [confirmationFunction, setConfirmationFunction] = React.useState<() => any>();\n    const [useCommission, setUseCommission] = React.useState(false);\n    const [addingSale, setAddingSale] = React.useState(false);\n    const [productSalesActive, setProductSalesActive] = React.useState(false);\n    const [productSales, setProductSales] = React.useState<ISale[]>([]);\n    const [product, setProduct] = React.useState<IProductData>({} as any);\n    const [salesData, setSalesData] = React.useState<ISalesData>({} as any);\n    const [salesTotals, setSalesTotals] = React.useState<ITotals>({} as any);\n    const [tithe, setTithe] = React.useState(0);\n    const [promotion, setPromotion] = React.useState(0);\n    const [registeredDates, setRegisteredDates] = React.useState<string[]>([]);\n    const [filter, setFilter] = React.useState<IProductFilters>(\"MostProfit\");\n    const [recordedDate, setRecordedDate] = React.useState<string>(`${months[new Date().getMonth()]}-${new Date().getFullYear()}`);\n    const tithePercent = 0.10;\n    const promotionPercent = 0.30;\n\n    const selectProduct = (product: IProductData) => {\n        setProduct(product);\n        setActiveAddSaleModal(true);\n    };\n\n    const getSalesData = (async (date?: string) => {\n        setLoadingApp(true);\n        const response = await fetch(`${process.env.REACT_APP_API}get-sales-data?date=${date || recordedDate}`);\n        const salesData: ISalesData = await response.json() as any;\n        setSalesData(salesData);\n        setLoadingApp(false);\n\n    });\n\n    React.useEffect(() => {\n        getSalesData();\n        getAllRecordsDates();\n    }, []);\n\n    const newSale = async () => {\n        const profit = product.price - product.cost;\n        const sale: ISale = {\n            id: new Date().getTime(),\n            productId: product.id,\n            price: product.price,\n            profit: profit,\n            cost: product.cost,\n            productName: product.name,\n            shipping: product.shipping || 0,\n            commission: useCommission ? product.commission : 0,\n        };\n\n        await addSale(sale);\n    };\n\n    const onChangeProduct = (ev: React.ChangeEvent<any>) => {\n        const { name, value } = ev.target;\n        const intValue = Number(value);\n        const newProduct = {\n            ...product,\n            [name]: intValue\n        };\n        setProduct(newProduct);\n    };\n\n    const addSale = async (newSale: ISale) => {\n        setAddingSale(true);\n        const sales = salesData.sales || [];\n        const body = JSON.stringify({\n            salesData: {\n                ...salesData,\n                sales: [\n                    ...sales,\n                    newSale,\n                ],\n            },\n            date: recordedDate,\n        });\n\n\n        const response = await fetch(`${process.env.REACT_APP_API}save-sales-data`, {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body,\n            }\n        );\n\n        if (response.status === 200) {\n            await getSalesData();\n            toast('¡Venta Exitosa!', {type: \"default\"});\n\n        } else {\n            toast('¡Error en la Venta!', {type: \"error\"});\n        }\n        setAddingSale(false);\n\n    };\n\n\n    const getAllRecordsDates = async () => {\n        const response = await fetch(`${process.env.REACT_APP_API}dates-registered`);\n        const dates: string[] = await response.json() as any || [];\n\n        const existActualDate = (dates as any).find((item: string) => item === recordedDate);\n        if(!existActualDate) {\n            dates.push(recordedDate);\n        };\n\n        setRegisteredDates(dates as any);\n    }\n\n    const updateSales = async (sales: ISale[]) => {\n        setAddingSale(true);\n        const body = JSON.stringify({\n            salesData: {\n                ...salesData,\n                sales: [\n                    ...sales,\n                ],\n            },\n            date: recordedDate,\n        });\n\n        const response = await fetch(`${process.env.REACT_APP_API}save-sales-data`, {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body,\n            }\n        );\n\n        if (response.status === 200) {\n            await getSalesData();\n            toast('¡Registro actualizado Exitosamente!', {type: \"default\"});\n\n        } else {\n            toast('¡Error en la Actualizacion!', {type: \"error\"});\n        }\n\n        setAddingSale(false);\n    };\n\n    const setAllDashboardTotals = () => {\n        const newTotals: ITotals = {} as any;\n        (Object.keys({shipping: 0, commission: 0, price: 0, profit: 0} as ITotals) as any)\n            .forEach((key: keyof ITotals) => {\n                const total = getTotalSumFromSalesDataKey(key);\n                newTotals[key] = total;\n            });\n        setSalesTotals(newTotals);\n\n        const tithe = newTotals.profit * tithePercent;\n        setTithe(tithe);\n        const promotion = newTotals.profit * promotionPercent;\n        setPromotion(promotion);\n    };\n\n    React.useEffect(() => {\n        if (salesData.sales) setAllDashboardTotals();\n    }, [salesData]);\n\n\n    const getTotalSumFromSalesDataKey = (key: keyof ISale) =>\n        salesData.sales.map((item: ISale) => !item[key] ? null : item[key] as any)\n            .filter(item => !!item)\n            .reduce((a: number, b: number) => a + b, 0);\n\n    const getProductSales = (productName: string) => !salesData.sales ? 0 :\n        salesData.sales.filter(sale => sale.productName === productName).length;\n\n    const getProductMoney = (productName: string) => {\n        if (!salesData.sales) return 0;\n        const totalSold = salesData.sales.filter(sale => sale.productName === productName)\n            .map(item => item.profit).reduce((a,b) => a + b, 0);\n\n        return totalSold;\n    };\n\n    const toggleAddSale = () => {\n        setActiveAddSaleModal(!activeAddSaleModal);\n        setProductSalesActive(false);\n    };\n    const useCommissionChange = (e: any) => {\n        const {checked} = e.target;\n        setUseCommission(checked);\n    };\n\n\n    const getAllSalesById = () => {\n        if(salesData.sales) {\n            const newProductSales = salesData.sales.filter((item, i) => item.productId === product.id);\n            setProductSales([...newProductSales]);\n            setProductSalesActive(true);\n        }\n    };\n\n    const salesHeader: IHeader[] = [\n        {\n            label: 'Precio',\n            property: 'price',\n        },\n        {\n            label: 'Costo',\n            property: 'cost',\n        },\n        {\n            label: 'Ganancia',\n            property: 'profit',\n        },\n        {\n            label: 'Costo de Envio',\n            property: 'shipping',\n        },\n        {\n            label: 'Comisión',\n            property: 'commission',\n        },\n    ];\n\n\n    const salesAction: IAction[] = [\n        {\n            label: 'Eliminar',\n            method: (sale: ISale) => () => {\n                toggleConfirmation();\n                setConfirmationFunction(() => deleteSale(sale.id))\n            },\n        },\n        {\n            label: 'Editar',\n            method: () => () => console.log('editando....'),\n        },\n    ];\n\n    const toggleProductSales: any = (value?: boolean) => setProductSalesActive(!productSalesActive);\n\n    const deleteSale = (saleId: number) => async () => {\n        const sales = salesData.sales.filter( (item: ISale, i: number) => item.id !== saleId);\n        setActiveConfirmationModal(false);\n\n        await updateSales(sales);\n        const productSales = sales.filter( item => item.productId === product.id);\n        setProductSales([...productSales]);\n    };\n\n    const toggleConfirmation = () => setActiveConfirmationModal(!activeConfirmationModal);\n\n    const mostProfitProducts = (sales: ISale[]): IProductData[] => {\n        return products.sort((a: IProductData,b: IProductData) => {\n            const aProfit = sales.map(sale => sale.productId === a.id ? sale.profit : undefined)\n                .filter(item => !!item).reduce((a,b) => Number(a) + Number(b), 0);\n\n            const bProfit = sales.map(sale => sale.productId === b.id ? sale.profit : undefined)\n                .filter(item => !!item).reduce((a,b) => Number(a) + Number(b), 0);\n            return Number(bProfit) - Number(aProfit);\n        });\n    }\n\n    const mostSalesProducts = (sales: ISale[]): IProductData[] => {\n        return products.sort((a: IProductData,b: IProductData) => {\n            const aSales = sales.filter(sale => sale.productId === a.id).length;\n            const bSales = sales.filter(sale => sale.productId === b.id).length;\n\n            return Number(bSales) - Number(aSales);\n        });\n    }\n\n    const filterChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { checked }  = e.target;\n        const filter: IProductFilters = checked ? 'MostSales' : 'MostProfit';\n        setFilter(filter);\n    };\n\n    switch (filter) {\n        case \"MostProfit\":\n            mostProfitProducts(salesData.sales || []);\n            break;\n        case \"MostSales\":\n            mostSalesProducts(salesData.sales || []);\n            break;\n        default:\n            break;\n    }\n\n    const onChangeDateRegistered = async (ev: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = ev.target;\n        setRecordedDate(value);\n        getSalesData(value);\n\n    }\n\n    return (\n        <>\n            {\n                !loadingApp ? null :\n                    <div className=\"loading-sale-container\">\n                        <Spinner animation=\"grow\" variant=\"secondary\"/>\n                    </div>\n            }\n            <Modal isOpen={activeConfirmationModal} toggle={toggleConfirmation}>\n                <ModalHeader toggle={toggleConfirmation}>Confirmación</ModalHeader>\n                <ModalBody>\n                    ¿Estas Seguro que deseas realizar esta acción?\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={confirmationFunction}>Confirmar</Button>{' '}\n                    <Button color=\"secondary\" onClick={toggleConfirmation}>Cancel</Button>\n                </ModalFooter>\n            </Modal>\n            <Modal isOpen={activeAddSaleModal} toggle={toggleAddSale}>\n                <ModalHeader toggle={toggleAddSale}>{product.name} | Nueva Venta</ModalHeader>\n                <ModalBody>\n                    {\n                        addingSale ?\n                            <div className=\"loading-sale-container\">\n                                <Spinner animation=\"grow\" variant=\"secondary\"/>\n                            </div>\n                            : null\n                    }\n                    {productSalesActive ?\n                        <>\n                            <Button color=\"primary\" className=\"mb-3\" type=\"button\" onClick={toggleProductSales} >Crear Venta</Button>\n                        <TableComponent data={productSales} headers={salesHeader} actions={salesAction} />\n                        </>\n                        :\n                        <>\n                            <FormGroup>\n                                <Label for=\"priceId\">Precio:</Label>\n                                <Input onChange={onChangeProduct} type=\"number\" name=\"price\" id=\"priceId\"\n                                       placeholder=\"Precio:\" value={product.price}/>\n                            </FormGroup>\n                            <FormGroup>\n                                <Label for=\"shippingId\">Envio:</Label>\n                                <Input onChange={onChangeProduct} type=\"number\" name=\"shipping\" id=\"shippingId\"\n                                       placeholder=\"Envio:\" value={product.shipping}/>\n                            </FormGroup>\n                            <>\n                                <CustomInput\n                                    type=\"switch\"\n                                    label=\"¿Incluye Comisión?\"\n                                    checked={useCommission}\n                                    className=\"customized-switch\"\n                                    onChange={useCommissionChange}/>\n                            </>\n                            {\n                                !useCommission ? null :\n                                    <FormGroup>\n                                        <Label for=\"commissionId\">Comisión:</Label>\n                                        <Input onChange={onChangeProduct} type=\"number\" name=\"commission\"\n                                               id=\"commissionId\" placeholder=\"Comisión:\" value={product.commission}/>\n                                    </FormGroup>\n                            }\n                            <Button color=\"primary\" className=\"mt-3\" onClick={getAllSalesById}>Todas las Ventas</Button>{' '}\n                        </>\n                    }\n\n\n                </ModalBody>\n                <ModalFooter>\n                    <Button color={productSalesActive ? 'dark' : 'primary' } onClick={newSale} disabled={productSalesActive}>Añadir</Button>{' '}\n                    <Button color=\"secondary\" onClick={toggleAddSale} >Cancel</Button>\n                </ModalFooter>\n            </Modal>\n            <div\n                className=\"d-flex align-items-center flex-column\"\n            >\n                <Col lg={2} md={4} sm={4} className=\"p-4\">\n                    <img src={Logo} alt=\"Logo AudSongs\" className=\"w-100\"/>\n                </Col>\n                <Col sm={12} className=\"d-flex justify-content-center mb-2\">\n                    <FormGroup>\n                        <Input type=\"select\" name=\"select\" className=\"select-date\" defaultValue={recordedDate} onChange={onChangeDateRegistered}>\n                            { registeredDates ?\n                                registeredDates\n                                    .map( (item, i) => {\n                                        const split = item.split(\"-\");\n                                        const selected = item===recordedDate;\n                                        return <option selected={selected} key={i} value={item}>{split[0]}  {split[1]}</option>}\n                                        )\n                                :\n                                <option> {months[new Date().getMonth()]} {new Date().getFullYear()}</option>\n                            }\n\n\n                        </Input>\n                    </FormGroup>\n\n                </Col>\n                <Col sm={12} className=\"d-flex justify-content-center mb-4 align-items-center\">\n                    <label className=\"mr-2 mb-0\">Más Ingresos</label>\n                <CustomInput\n                    type=\"switch\"\n                    label=\"Más Vendidos\"\n                    className=\"customize-switch\"\n                    onChange={filterChange}\n                    />\n\n                </Col>\n                <Col lg={10} md={10} sm={12} className=\"d-flex justify-content-center\">\n                    <Row className=\"justify-content-center label-grid col-lg-10\">\n                        <MoneyStatisticLabel\n                            label=\"Vendido\"\n                            amount={salesTotals.price}\n                            className=\"total-label\"\n                        />\n                        <MoneyStatisticLabel\n                            label=\"Beneficio\"\n                            amount={salesTotals.profit}\n                            className=\"total-label\"\n                        />\n                        <MoneyStatisticLabel\n                            label=\"Comisiones\"\n                            amount={salesTotals.commission}\n                            className=\"total-label\"\n                        />\n                        <MoneyStatisticLabel\n                            label=\"Envios\"\n                            amount={salesTotals.shipping}\n                            className=\"total-label\"\n                        />\n                        <MoneyStatisticLabel\n                            label=\"Promoción\"\n                            amount={promotion}\n                            className=\"total-label\"\n                        />\n                        <MoneyStatisticLabel\n                            label=\"Diezmo\"\n                            amount={tithe}\n                            className=\"total-label\"\n                        />\n\n                    </Row>\n                </Col>\n                <Col lg={8} md={10} sm={12} className=\"cards mt-3\">\n                    {\n                        products.map((item, i) =>\n                            <Product\n                                {...item}\n                                onSelect={selectProduct}\n                                salesQuantity={getProductSales(item.name)}\n                                moneyGenerated={getProductMoney(item.name) as number}\n                                addSale={addSale}\n                                key={i}\n                            />\n                        )}\n                </Col>\n            </div>\n        </>\n    )\n};\n\nexport default Dashboard;\n\n\n// {/*<Col lg={10} md={12}>*/}\n// {/*    <Row className=\"d-flex justify-content-center\">*/}\n// {/*        <Col*/}\n// {/*            {...inputsSizes}*/}\n// {/*        >*/}\n// {/*            <FormGroup>*/}\n// {/*                <Label for=\"priceInput\">Precio</Label>*/}\n// {/*                <Input type=\"number\" name=\"price\" id=\"priceInput\"/>*/}\n// {/*            </FormGroup>*/}\n// {/*        </Col>*/}\n// {/*        <Col*/}\n// {/*            {...inputsSizes}*/}\n// {/*        >*/}\n// {/*            <FormGroup>*/}\n// {/*                <Label for=\"profitInput\">Beneficio</Label>*/}\n// {/*                <Input type=\"number\" name=\"profit\" id=\"profitInput\"/>*/}\n// {/*            </FormGroup>*/}\n// {/*        </Col>*/}\n// {/*        <Col*/}\n// {/*            {...inputsSizes}*/}\n// {/*        >*/}\n// {/*            <FormGroup>*/}\n// {/*                <Label for=\"shippingInput\">Precio de Envio</Label>*/}\n// {/*                <Input type=\"number\" name=\"shipping\" id=\"shippingInput\"/>*/}\n// {/*            </FormGroup>*/}\n// {/*        </Col>*/}\n// {/*    </Row>*/}\n// {/*</Col>*/}\n","import React from 'react';\nimport './App.css';\nimport {Dashboard} from \"./screens\";\nimport {ToastContainer} from \"react-toastify\";\nimport { Switch, Route } from \"react-router\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n        <ToastContainer\n            position=\"bottom-left\"\n            autoClose={5000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            pauseOnHover\n        />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n    <Router>\n        <React.StrictMode>\n            <App/>\n        </React.StrictMode>\n    </Router>\n    ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}